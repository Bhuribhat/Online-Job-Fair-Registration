@startuml Manage Booking (DELETE)

header Online Job Fair Registration
title "Delete a Single Booking (DELETE)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:bookings" as routerBookings
participant "<<middleware>>\n:auth" as auth
participant "<<service>>\n:jwt" as jwt
participant "<<controllers>>\n:bookings" as controllersBookings
participant "<<model>>\n:Booking" as modelBooking
participant "<<model>>\n:User" as modelUser
database "<<Database>>\n:MongoDB" as DatabaseSchema

client->server ++:req.delete('/bookings/:id')
server->routerBookings ++:app.use('/bookings', bookings)
routerBookings -> auth ++:protect()
auth -> jwt ++:verify(token, secret)
auth <- jwt --:decoded
auth -> modelUser ++:findById(decoded, id)
modelUser -> DatabaseSchema ++:UserSchema
modelUser <- DatabaseSchema --:user
auth <- modelUser --:req.user
routerBookings <- auth --:next()

routerBookings -> auth ++:authorize("admin",""user)
routerBookings <-- auth --:next()

routerBookings -> auth ++:deleteBooking()
auth -> controllersBookings ++:deleteBooking()
controllersBookings->modelBooking ++:findById(req.params.id)
modelBooking ->DatabaseSchema ++: BookingSchema
DatabaseSchema --> modelBooking --: void
controllersBookings <-- modelBooking --:void
controllersBookings->client --:success response

@enduml