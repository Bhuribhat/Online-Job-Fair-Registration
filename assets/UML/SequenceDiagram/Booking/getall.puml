@startuml Manage Booking (GET ALL)

header Online Job Fair Registration
title "Get All Bookings (GET ALL)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:bookings" as routerBookings
participant "<<middleware>>\n:auth" as auth
participant "<<service>>\n:jwt" as jwt
participant "<<controllers>>\n:bookings" as controllersBookings
participant "<<model>>\n:Booking" as modelBooking
participant "<<model>>\n:User" as modelUser
database "<<Database>>\n:MongoDB" as DatabaseSchema

client->server ++:req.get('/bookings/')
server->routerBookings ++:app.use('/bookings/', bookings)
routerBookings -> auth ++:protect()
auth -> jwt ++:verify(token, secret)
auth <- jwt --:decoded

alt [Fail]
    client <- auth --:response fail
else [Success]
    auth -> modelUser ++:findById(decoded, id)
    modelUser -> DatabaseSchema ++:UserSchema
    modelUser <- DatabaseSchema --:user
    auth <- modelUser --:req.user
    routerBookings <- auth --:next()
    routerBookings -> controllersBookings ++:getBookings()
    alt user's role is user
        controllersBookings-> modelBooking ++:find({ user: req.user.id })
    else user's role is admin
        controllersBookings-> modelBooking --:find()
    end
    modelBooking -> DatabaseSchema ++: BookingSchema
    DatabaseSchema --> modelBooking --: bookings
    controllersBookings <-- modelBooking --:bookings
    controllersBookings -> client --:response
end

@enduml